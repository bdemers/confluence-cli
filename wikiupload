#!/usr/bin/env python
# Version: v1.4
# Credits: Based upon work originally by Matt Ryall (Atlassian)
#          now maintained by github.com/ghuntley/

from __future__ import with_statement
import sys, string, xmlrpclib, re, os, ConfigParser, commands, mimetypes

## Stuff TODO:
##      - command line options instead of config file as an alternative
##      - command line options to specify the config file
##      - merge two scripts into one and specify sub-command as an argument
##      - API version handling (see below)

configfn = '~/.confluencerc';
configrc = os.path.expanduser(configfn);
config = ConfigParser.RawConfigParser();

if not os.path.exists(configrc):
    config.add_section('config');
    config.set('config', 'url', 'https://confluence.example.com/rpc/xmlrpc');
    config.set('config', 'username', 'username');
    config.set('config', 'password', 'password');

    with open(configrc, 'wb') as configfile:
        config.write(configfile);

    exit("""
    Configuration file ("""+configfn+""") missing, I'm going to assume
    that this is a first time install and will generate a blank one.
    Please update this configuration file with your username, password
    and the URL of confluence wiki service you wish to use.

    NOTE: do not quoute the password and/or username in the config file.
    The leading space after '=' will be ignored.
    """);

if len(sys.argv) < 4:
    exit("Usage: " + sys.argv[0] + " spacekey pagetitle filename");

config.read(configrc);
url = config.get('config','url');
username = config.get('config','username');
password = config.get('config','password');

spacekey = sys.argv[1];
pagetitle = sys.argv[2];
filename = sys.argv[3];

with open(filename, 'rb') as f:
    data = f.read(); # slurp all the data

    server = xmlrpclib.ServerProxy(url);
    ## XXX: should we:
    ##      - figure out what version of API the server is using (how?)
    ##      - put this in the config file (least favourable)
    token = server.confluence2.login(username, password);
    page = server.confluence2.getPage(token, spacekey, pagetitle);
    if page is None:
        exit("Could not find page " + spacekey + ":" + pagetitle);

    attachment = {};
    attachment['fileName'] = os.path.basename(filename);
    attachment['contentType'] = mimetypes.guess_type(filename)[0]
    
    print server.confluence2.addAttachment(token, page['id'], attachment, xmlrpclib.Binary(data))['url'];
